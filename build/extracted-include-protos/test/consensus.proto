//
// This is the request and response for reaching consensus
//

syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.consensus";
option java_outer_classname = "ConsensusProto";
option objc_class_prefix = "CSS";

package consensus;

service Replication {
    // Sends a request to seek consensus
    rpc leaderElection (RequestToPrepare) returns (ReplyOfPrepared) {}
    rpc valueProposal (ValueProposed) returns (ValueAccepted) {}
}

message RequestToPrepare {
    string candidate = 1;
    int32 sequenceId = 3;
}

message ReplyOfPrepared {
    string voter = 1;
    int32 lastHighest = 2;
    string acceptedValue = 3;
}

message ValueProposed {
    int32 logPosition = 1;
    string proposer = 2;
    string value = 3;
}

message ValueAccepted {
    int32 logPosition = 1;
    string acceptor = 2;
}

message LogItem {
    int32 location = 1;
    string content = 2;
}

message ReplicationLog {
    repeated LogItem logItem = 1;
}